type ClassRoom 
@model 
@key(fields: ["name"])
@auth(rules: [
    {allow: owner}
]) {
    name: String!,
    kendraIndexId: String!
    studentEmails:[AWSEmail]!
}

type ScreenSharingTicket 
@model(subscriptions: null) 
@key(fields: ["email"])
@auth(rules: [
    {allow: owner },
    {allow: groups, groups: ["students"], groupClaim: "user_groups", operations: [read]}
]) {
    email: AWSEmail!
    kendraIndexId: String!
    activeUntil: AWSDateTime!
}

type Message
@model(subscriptions: null) 
@key(fields: ["email"])
@auth(rules: [
    {allow: owner },
    {allow: groups, groups: ["students"], groupClaim: "user_groups", operations: [read]}
]) {
    email: AWSEmail!
    content: String!
}

type Subscription {
  onCreateScreenSharingTicket(email: AWSEmail!): ScreenSharingTicket
    @aws_subscribe(mutations: ["createScreenSharingTicket"])
    
  onCreateMessage(email: AWSEmail!): Message
    @aws_subscribe(mutations: ["createMessage"])    
}